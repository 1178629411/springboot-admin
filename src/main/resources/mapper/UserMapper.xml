<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cxhello.admin.dao.UserDao">
    
    <resultMap id="userResultMap" type="com.cxhello.admin.entity.User">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="sex" column="sex"/>
        <result property="birthday" column="birthday"/>
        <result property="telephone" column="telephone"/>
        <result property="email" column="email"/>
        <result property="address" column="address"/>
        <result property="deleteStatus" column="delete_status"/>
        <result property="locked" column="locked"/>
        <result property="description" column="description"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="findAllByLikeNickName" parameterType="string" resultMap="userResultMap">
        SELECT
        id,
        user_name,
        nick_name,
        sex,
        birthday,
        telephone,
        email,
        address,
        description,
        password,
        delete_status,
        locked,
        description,
        create_time,
        update_time
        FROM tb_user
        <where>
            <if test="searchText!=null and searchText!=''">
                nick_name like concat ('%',#{searchText},'%')
            </if>
        </where>
    </select>

    <select id="selectUserRoles" parameterType="integer" resultType="com.cxhello.admin.entity.Role">
        SELECT
        ro.id as id,
        ro.name as name,
        ro.role_key as roleKey,
        ro.status as status,
        ro.description as description,
        ro.create_time as createTime,
        ro.update_time as updateTime
        FROM
        tb_user u
        INNER JOIN tb_user_role ur ON u.id = ur.user_id
        INNER JOIN tb_role ro ON ro.id = ur.role_id
        <where>
            <if test="id!=null">
                u.id = #{id}
            </if>
        </where>
    </select>

    <insert id="grant">
        insert into tb_user_role (user_id,role_id) values (#{userId},#{roleId})
    </insert>

    <delete id="deleteUserRoles" parameterType="integer">
        delete from tb_user_role where user_id = #{id}
    </delete>


</mapper>